{
  "name": "tweet-debezium", 
  "config": {
    "connector.class": "io.debezium.connector.mongodb.MongoDbConnector", 
    "mongodb.user": "${file:/tweet-app/utils/secrets/secrets.properties:user}",
    "mongodb.password": "${file:/tweet-app/utils/secrets/secrets.properties:password}",
    "mongodb.connection.string": "mongodb+srv://${file:/tweet-app/utils/secrets/secrets.properties:user}:${file:/tweet-app/utils/secrets/secrets.properties:password}@tweet-app.cteyhxm.mongodb.net/?retryWrites=true&w=majority", 
    "mongodb.connection.uri": "mongodb+srv://${file:/tweet-app/utils/secrets/secrets.properties:user}:${file:/tweet-app/utils/secrets/secrets.properties:password}@tweet-app.cteyhxm.mongodb.net/?retryWrites=true&w=majority",
    "mongodb.ssl.enabled": true,
    "mongodb.members.auto.discover": true,
    "database.include.list": "test",
    "collection.include.list": "test.tweets",
    "topic.creation.default.cleanup.policy": "compact",
    "document.id.strategy": "com.mongodb.kafka.connect.sink.processor.id.strategy.BsonOidStrategy",
    "topic.prefix": "tweet-app",

    "internal.key.converter":"org.apache.kafka.connect.json.JsonConverter",
    "internal.value.converter":"org.apache.kafka.connect.json.JsonConverter",
    "internal.key.converter.schemas.enable": false,
    "internal.value.converter.schemas.enable": false,

    "collection.whitelist": "test.tweets",
    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "value.converter": "org.apache.kafka.connect.json.JsonConverter",

    "key.converter.schemas.enable": false,
    "value.converter.schemas.enable": false,
    "topic.creation.default.replication.factor": 1,  
    "topic.creation.default.partitions": 3,   
    "transforms": "unwrap,InsertDynamicField,createKey,TopicJsonPath",
    "transforms.unwrap.collection.expand.json.payload": true,
    "transforms.unwrap.type":"io.debezium.connector.mongodb.transforms.ExtractNewDocumentState",
    "transforms.InsertDynamicField.type": "com.kafka.connect.smt.InsertDynamicField$Value",
    "transforms.InsertDynamicField.uuid.field.name": "id",
    "transforms.createKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
    "transforms.createKey.fields": "id",
    "transforms.TopicJsonPath.type": "io.confluent.connect.transforms.ExtractTopic$Value",
    "transforms.TopicJsonPath.field": "$.topicRouter",
    "transforms.TopicJsonPath.field.format": "JSON_PATH",
    "transforms.TopicJsonPath.skip.missing.or.null": "false"
  }
}